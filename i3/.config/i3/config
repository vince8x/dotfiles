# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod1
set $mod2 Mod4

# theme
set $rosewater #f5e0dc
set $flamingo #f2cdcd
set $pink #f5c2e7
set $mauve #cba6f7
set $red #f38ba8
set $maroon #eba0ac
set $peach #fab387
set $yellow #f9e2af
set $green #a6e3a1
set $teal #94e2d5
set $sky #89dceb
set $sapphire #74c7ec
set $blue #89b4fa
set $lavender #b4befe
set $text #cdd6f4
set $subtext1 #bac2de
set $subtext0 #a6adc8
set $overlay2 #9399b2
set $overlay1 #7f849c
set $overlay0 #6c7086
set $surface2 #585b70
set $surface1 #45475a
set $surface0 #313244
set $base #1e1e2e
set $mantle #181825
set $crust #11111b

exec --no-startup-id fcitx -d

# terminal
set $term --no-startup-id kitty

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font xft:Hack Nerd Font, FontAwesome 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# scratchpads and autostart
exec --no-startup-id sxhkd &
exec --no-startup-id xfce4-power-manager &

exec --no-startup-id kitty --class pulse,pulse -e pulsemixer
exec --no-startup-id kitty --class dropdown,dropdown -e kitty
exec --no-startup-id kitty --class ranger,ranger -e ranger
for_window [class="pulse"] , move scratchpad
for_window [class="dropdown"] , move scratchpad
for_window [class="ranger"] , move scratchpad
bindsym $mod2+Return [instance="dropdown"] scratchpad show; move position center
bindsym $mod2+p [instance="pulse"] scratchpad show; move position center
bindsym $mod2+f [instance="ranger"] scratchpad show; move position center
bindsym $mod+Shift+minus move scratchpad
bindsym $mod+minus scratchpad show
bindsym $mod2+k exec ~/.vim-anywhere/bin/run

# clipmenu
bindsym $mod+c exec --no-startup-id clipmenu


# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# A more modern dmenu replacement is rofi:
bindsym $mod+Shift+d exec "rofi -modi drun,run -show drun"
bindsym $mod+Shift+v exec --no-startup-id "rofi -show drun -run-command 'gksudo {cmd}'"
bindsym $mod+Shift+l exec "rofi -show window"
bindsym $mod+Shift+p exec --no-startup-id passmenu


# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+m focus left
bindsym $mod+n focus down
bindsym $mod+e focus up
bindsym $mod+i focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+m move left
bindsym $mod+Shift+n move down
bindsym $mod+Shift+e move up
bindsym $mod+Shift+i move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+b layout default
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+o layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"
set $ws11 "11"
set $ws12 "12"
set $ws13 "13"
set $ws14 "14"
set $ws15 "15"
set $ws16 "16"
set $ws17 "17"
set $ws18 "18"
set $ws19 "19"
set $ws20 "20"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10
bindsym $mod2+1 workspace number $ws11
bindsym $mod2+2 workspace number $ws12
bindsym $mod2+3 workspace number $ws13
bindsym $mod2+4 workspace number $ws14
bindsym $mod2+5 workspace number $ws15
bindsym $mod2+6 workspace number $ws16
bindsym $mod2+7 workspace number $ws17
bindsym $mod2+8 workspace number $ws18
bindsym $mod2+9 workspace number $ws19
bindsym $mod2+0 workspace number $ws20

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10
bindsym $mod2+Shift+1 move container to workspace number $ws11
bindsym $mod2+Shift+2 move container to workspace number $ws12
bindsym $mod2+Shift+3 move container to workspace number $ws13
bindsym $mod2+Shift+4 move container to workspace number $ws14
bindsym $mod2+Shift+5 move container to workspace number $ws15
bindsym $mod2+Shift+6 move container to workspace number $ws16
bindsym $mod2+Shift+7 move container to workspace number $ws17
bindsym $mod2+Shift+8 move container to workspace number $ws18
bindsym $mod2+Shift+9 move container to workspace number $ws19
bindsym $mod2tShift+0 move container to workspace number $ws20


# default screen
workspace $ws1 output primary
workspace $ws2 output primary
workspace $ws3 output primary
workspace $ws4 output primary
workspace $ws5 output primary
workspace $ws6 output primary
workspace $ws7 output primary
workspace $ws8 output primary
workspace $ws9 output primary
workspace $ws10 output primary
workspace $ws11 output HDMI-A-0
workspace $ws12 output HDMI-A-0
workspace $ws13 output HDMI-A-0
workspace $ws14 output HDMI-A-0
workspace $ws15 output HDMI-A-0
workspace $ws16 output HDMI-A-0
workspace $ws17 output HDMI-A-0
workspace $ws18 output HDMI-A-0
workspace $ws19 output HDMI-A-0
workspace $ws20 output HDMI-A-0


# move focused workspace between monitors
bindsym $mod+Ctrl+period move workspace to output right
bindsym $mod+Ctrl+comma move workspace to output left

# change focus monitors
bindsym $mod+a focus output right
bindsym $mod+Shift+a focus output down

# switch workspace
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev



# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+x exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# keybinding to lock screen
bindsym Control+Mod1+l exec "i3lock -c 000000"

# ayto lock the screen
exec "xautolock -detectsleep -time 3 -locker \"i3lock -c 000000\""

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
